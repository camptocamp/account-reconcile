sudo: required

services: docker

git:
  # we don't want travis to pull them for the lint build,
  # so we pull them manually in the tests build
  submodules: false

env:
  matrix:
    - LINT_CHECK="1"
    - TESTS="1"
  global:
    - DOCKER_COMPOSE_VERSION="1.7.1"
    - TESTS="0" LINT_CHECK="0"
    - ADDONS_DIR=${TRAVIS_BUILD_DIR}/odoo/local-src
    - SONGS_DIR=${TRAVIS_BUILD_DIR}/odoo/songs
    - COMPOSE_PROJECT_NAME=qoqa
    - GENERATED_IMAGE=${COMPOSE_PROJECT_NAME}_odoo
    - DOCKER_HUB_REPO=camptocamp/${GENERATED_IMAGE}
    - RANCHER_MINION_SERVER=https://${COMPOSE_PROJECT_NAME}.odoo-test.camptocamp.ch
    - secure: "ncUR0XV5RFXJEWbWp42t1g2yiL+R45tXX+fyuRoxTPH8WzEFMuR3StE4rHHjqsqstxPhJoxSFKl3sPsOIz4Vtwiw6BUDl5scfcKPcUlxR9PdYKK6kSfzO31q3d5nWFlwnp4BB7Gonir8vdeXViKhA6Sj/dhVljwINoL7PCTfwRo="

before_install:
  - git config --global user.name "TravisCI"
  - git config --global user.email "travis@camptocamp.com"
  - if [ "$LINT_CHECK" == "1" ] ; then pip install --user -q flake8 ; fi
  - if [ "$LINT_CHECK" == "0" ] ; then pip install --user -q gitpython requests pyyaml; fi

install:
  - if [ "$LINT_CHECK" == "0" ] ; then git submodule init ; fi
  - if [ "$LINT_CHECK" == "0" ] ; then git submodule update ; fi
    # we always specify '-f docker-compose.yml' so 'docker-compose.override.yml'
    # is not used and so the volumes are not shared with the host
  - if [ "$LINT_CHECK" == "0" ] ; then docker-compose -f docker-compose.yml build --pull ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml up -d db ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml ps ; fi

# We run the tests and scenario in the same build, so we can push the docker image
# after that we validated it has tests and scenario passing
script:
  - if [ "$LINT_CHECK" == "1" ] ; then flake8 ${ADDONS_DIR} ${SONGS_DIR} --exclude=__init__.py ; fi
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e DEMO=True -e TRAVIS=True odoo runtests ; fi
    # run the scenario
  - if [ "$TESTS" == "1" ] ; then docker-compose -f docker-compose.yml run --rm -e MARABUNTA_MODE=demo -e MARABUNTA_ALLOW_SERIE=True odoo odoo.py --stop-after-init ; fi

after_success:
  - if [ "$TESTS" == "1" ] ; then ./travis/publish.sh ; fi
