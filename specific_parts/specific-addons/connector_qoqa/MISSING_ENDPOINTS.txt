Scénarios des synchronisations prévues:

Authentification avec OAuth
===========================

Scénario

  QoQa fournit un client key et un client secret.  Je les saisis dans OpenERP,
  une URL vers le site QoQa s'affiche.  Je me connecte sur l'URL avec le login
  prévu pour OpenERP et accepte l'accès.  Un PIN m'est proposé, que je saisis
  dans OpenERP. OpenERP stocke les tokens OAuth pour les accès ultérieurs.

Requis sur l'API

  Rien, j'ai pu mettre en place l'authentification sur OpenERP.
  Les droits vont changer sur QoQa mais ça ne doit pas avoir d'impact sur ce processus.

Exports
=======

Flux Standard d'un export
-------------------------

Scénario

  Je modifie un objet X. Un job d'export est ajouté dans la file.
  Lorsque le job est exécuté, il va chercher dans la DB OpenERP l'ID QoQa de l'objet X.
  S'il le connait, c'est une modification, autrement une création.
  Il va utiliser la méthode de création ou de modification sur l'API QoQa avec l'ID QoQa si connu.

  Pour chaque type d'objet, il faudra déterminer si sa suppression sur OpenERP
  doit entraîner sa suppression sur QoQa.

Export des produits simples vers QoQa avec attributs
----------------------------------------------------

Scénario

  Les produits sont séparés en 2 objets: un template (partagé par les variantes) et une variante.
  Un template peut avoir plusieurs variantes. Une template a au minimum 1 variante.

  Le scénario standard d'export s'applique aux templates et aux variantes.
  Aucun média (images, ...) n'est exporté vers QoQa.
  L'export récupère tous les attributs du set attribué au produit et les envoie également à QoQa.
  Il va aussi chercher les champs traduisibles pour les envoyer.

  Est-ce que la suppression d'un produit sur OpenERP doit entraîner sa suppression sur QoQa ?

Requis sur l'API

  API Produits (template):

    * Création (POST)
    * Modification depuis son ID (PUT / POST / PATCH à choix)
    * suppression (DELETE), si nécessaire
    * Y compris traductions et attributs
    * Explications sur les données à fournir

  API Variantes:

    * Création (POST)
    * Modification depuis son ID (PUT / POST / PATCH à choix)
    * suppression (DELETE), si nécessaire
    * Y compris traductions et attributs
    * Explications sur les données à fournir

Export des offres
-----------------

Scénario
  
  Le scénario standard d'export s'applique.

Requis sur l'API

  API Offre:

    * Création (POST)
    * Modification depuis son ID (PUT / POST / PATCH à choix)
    * suppression (DELETE), si nécessaire
    * Y compris traductions
    * Explications sur les données à fournir

Nécessite les exports

  * Produits

Envoi du n° de tracking
-----------------------

Scénario

  Quand un n° de tracking est ajouté sur une expédition, il est envoyé sur QoQa.

Requis sur l'API

  API Offre? (sur quel modèle?)

    * Méthode pour ajouter un n° de tracking (c'est peut-être juste une
      modification normale)
  
Export des bons cadeaux
-----------------------

Scénario

  Le scénario standard d'export s'applique.

Requis sur l'API

  API Bons

    * Création (POST)
    * Modification depuis son ID (PUT / POST / PATCH à choix)
    * suppression (DELETE), si nécessaire
    * Explications sur les données à fournir

Nécessite les imports

  * Clients (pour les lier aux bons) ou Users ? (différence users / clients ?)


Imports
=======

Flux Standard d'un export
-------------------------

Scénario

  Les enregistrements du modèle X doivent être importés depuis QoQa.
  Une date de dernière mise à jour du modèle X est stockée.
  Sur OpenERP, une tâche planifiée (intervalle configurable) d'import pour le modèle X s'exécute :
    1. Elle fait une recherche sur QoQa de tous les enregistrements créés ou
       modifiés depuis la dernière date de mise à jour. L'API QoQa retourne une
       liste d'IDs correspondants à la recherche.
    2. Pour chaque ID, OpenERP crée un Job d'import et le pousse dans la file d'exécution.
    3. Les jobs d'imports sont traités l'un après l'autre, de manière atomique.

  Un job d'import :
    1. Demande les informations du modèle X pour l'ID concerné
    2. Recherche si c'est un nouvel enregistrement dans OpenERP ou une modification
    3. Importe les dépendances si nécessaire (ex: l'import d'une commande doit
       importer le client si pas encore existant)
    3. Les transforme, sauvegarde dans OpenERP, conserve l'ID QoQa également

Import des clients et addresses
-------------------------------

Scénario

  Le scénario standard d'import s'applique.

  Si j'ai bien compris, il y a 3 notions:

    * le user, qui est lié à 0-1 client
    * le client, qui est lié à 1 user et à 0-n adresses
    * l'adresse, qui est liée à 1 client

Requis sur l'API

  API Users

    * Recherche selon critères (en tout cas depuis dernière "update date") +
      le retour d'une liste d'ids doit être possible au lieu du détail
    * Lecture depuis son ID

  API Clients

    * Recherche selon critères (en tout cas depuis dernière "update date") +
      le retour d'une liste d'ids doit être possible au lieu du détail
    * Lecture depuis son ID

  API Adresse

    * Recherche selon critères (en tout cas depuis dernière "update date") +
      le retour d'une liste d'ids doit être possible au lieu du détail
    * Lecture depuis son ID

Import des commandes de QoQa
----------------------------

Scénario

  Le scénario standard d'import s'applique.

  L'import d'une commande implique qu'on doit connaitre tout ce qui y est lié:
    
    * clients
    * bons
    * produits
    * offres
    * deal
    * ?

  L'import des clients est prévu, donc pas de souci ici. Les produits, les offres
  et les deals sont connus dans OpenERP puisque c'est là qu'on les saisit. A une exception :
  l'historique des commandes sera lié à des données qui n'existent à ce jour que sur QoQa.
  On doit donc prévoir un import de ces données.

  Pour certaines infos, on peut probablement se baser sur ce qu'on a dans le
  JSON de la commande, autrement il faudra ajouter des endpoints si besoin de +
  d'infos.

Requis sur l'API

  API Commande

    * Recherche selon critères (en tout cas depuis dernière "update date") +
      le retour d'une liste d'ids doit être possible au lieu du détail
    * Lecture depuis son ID
  

Import des bons cadeaux
-----------------------
Scénario

  Le scénario standard d'import s'applique.

Requis sur l'API


  API Bons
    * Recherche selon critères (en tout cas depuis dernière "update date") +
      le retour d'une liste d'ids doit être possible au lieu du détail
    * Lecture depuis son ID
